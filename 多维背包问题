import pandas as pd#库的导入，导入pandas库
import numpy as np#库的导入，导入numpy库
_________分隔线________________
s,m=map(int, input("请输入变量数量s和约束数量m：").split())#定义s和m的输入，输入为变量数量和约束数量，数据类型为整数
b=list(map(float, input("输入s个物品价值：").split()))#物品的输入价值，输入成列表形式
kong_data=[]#定义一个空列表，用来存储我们将要输入的属性，列表是为了让数据看起来整洁一点
for i in range(m):#i的范围在m的取值范围之间，即可以取多少行数据
    i=int(i)#将i类型强制转换为整型，方便计算和观看
    print("输入第 %d 个属性："%(i+1))#提示输入第i个属性
    t=list(map(int, input().split()))#接收我们输入的属性，每次输入一行，输入后回车
    kong_data.append(t)#将属性添加到我们刚刚定义的kong_data列表中
data = pd.DataFrame(kong_data)#将属性转换成数据帧的形式，也是为了方便查看数据，用到pandas库
y=list(map(int, input("输入m个属性的约束条件：").split()))#定义我们接收约束条件的列表，对应着每一行属性数据
data['约束条件']=y#将约束条件加入data数据帧中成为一列，对应每一行数据
print(data)#打印data数据帧,以列表+列表的形式呈现
_________分隔线________________
value=0#初始价值量为0
max_jiazhi=0#定义我们所需要的最大价值量
def xunhuan(i):#定义一个xunhuan函数，i是数据的行数
    global max_jiazhi,value#调用我们定义的全局变量，价值量和最大价值量
    if i>s-1:#进行判断，s是变量数量，每一行有几个数据
        if value>max_jiazhi:#判断成功再判断，若初始量大于最大价值量，进行下一步
            max_jiazhi=value#条件成立，赋值     
    else: 
        for j in range(2):#j的取值范围
            p=0
            p=data['约束条件']-data[i]*j
            if (p>0).all():#all是一个判断，全为真返回true，进行下一步工作
                value=value+b[i]*j#价值量增加
                data['约束条件']=data['约束条件']-data[i]*j#满足了条件，去掉当前已经用过的数据，继续循环
                xunhuan(i+1)#循环层数增加
                value=value-b[i]*j
                data['约束条件']=data['约束条件']+data[i]*j#存储最大价值量，和约束条件进行比较            
xunhuan(0)#为0时停止
print("最大价值为%f元"%max_jiazhi)#输出结果，带小数
